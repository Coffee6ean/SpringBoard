PostgreSQL - 

PostgreSQL is the Open Source RDBMS we'll use here
- Powerful
- Popular
- Follows the SQL standard closely

Managing Databases:

PostgreSQL Shell:
PostgreSQL includes *psql*, a terminal-based program for issuing database
commands.

    $ psql my_database_name
    psql (10.5)
    Type "help" for help.

    my_database_name=#

Create Databases: 
Each project will have a separate database

Creating a database:
    $ createdb my_database_name
​
Good database names are short and straightforward, and in lower_snake_case.

Where Is That Database?
The database is not a file in your current directory. It’s a bunch of 
files/folders elsewhere on your computer. These aren’t human-readable 
(they’re optimized for speed). 
Saving your project in Git won’t save your database

Seeding a Database:
You can feed .sql scripts into the program psql:
    $ psql < my_database.sql
This is often used to seed an empty database by building tables, filling 
in rows, or both.

Backing Up a Database:
You can also make a backup of your database by “dumping it” to a file:
    ```bash
    $ pg_dump -C -c -O my_database_name > backup.sql
    ```

This makes a file in the current directory, `backup.sql`
It contains all of the commands necessary to re-create the current database 
when seeding.

Dropping Databases:
A database that is “dropped” is completely deleted (schema & data).
    $ dropdb my_database_name

Common Commands:
- `\l` — List all databases
- `\c DB_NAME` — connect to *DB_NAME*
- `\dt` — List all tables (in current db)
- `\d TABLE_NAME` — Get details about *TABLE_NAME* (in current db)
- `\q` — Quit ***psql***(can also type ***<Control-D>***)
- `\x` — Expanded display